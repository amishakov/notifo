/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ListResponseDtoOfMobilePushTokenDto,
  RegisterMobileTokenDto,
} from '../models/index';
import {
    ListResponseDtoOfMobilePushTokenDtoFromJSON,
    RegisterMobileTokenDtoToJSON,
} from '../models/index';

export interface MobilePushDeleteMyTokenRequestRaw {
    token: string;
}

export interface MobilePushPostMyTokenRequestRaw {
    registerMobileTokenDto: RegisterMobileTokenDto;
}

/**
 * MobilePushApi - interface
 * 
 * @export
 * @interface MobilePushApiInterface
 */
export interface MobilePushApiInterface {
    /**
     * 
     * @summary Deletes a mobile push token for the current user.
     * @param {string} token The token to remove.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MobilePushApiInterface
     */
    deleteMyTokenRaw(token: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * Deletes a mobile push token for the current user.
     */
    deleteMyToken(token: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary Returns the mobile push tokens.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MobilePushApiInterface
     */
    getMyTokenRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListResponseDtoOfMobilePushTokenDto>>;

    /**
     * Returns the mobile push tokens.
     */
    getMyToken(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListResponseDtoOfMobilePushTokenDto>;

    /**
     * 
     * @summary Register a mobile push token for the current user.
     * @param {RegisterMobileTokenDto} registerMobileTokenDto The request object.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MobilePushApiInterface
     */
    postMyTokenRaw(registerMobileTokenDto: RegisterMobileTokenDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * Register a mobile push token for the current user.
     */
    postMyToken(registerMobileTokenDto: RegisterMobileTokenDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class MobilePushApi extends runtime.BaseAPI implements MobilePushApiInterface {

    /**
     * Deletes a mobile push token for the current user.
     */
    async deleteMyTokenRaw(token: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const _token = token;

        if (_token == null) {
            throw new runtime.RequiredError(
                'token',
                'Required parameter "token" was null or undefined when calling ().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/me/mobilepush/{token}`.replace(`{${"token"}}`, encodeURIComponent(String(_token))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Deletes a mobile push token for the current user.
     */
    async deleteMyToken(token: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteMyTokenRaw(token, initOverrides);
    }

    /**
     * Returns the mobile push tokens.
     */
    async getMyTokenRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListResponseDtoOfMobilePushTokenDto>> {

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/me/mobilepush`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListResponseDtoOfMobilePushTokenDtoFromJSON(jsonValue));
    }

    /**
     * Returns the mobile push tokens.
     */
    async getMyToken(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListResponseDtoOfMobilePushTokenDto> {
        const response = await this.getMyTokenRaw(initOverrides);
        return await response.value();
    }

    /**
     * Register a mobile push token for the current user.
     */
    async postMyTokenRaw(registerMobileTokenDto: RegisterMobileTokenDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const _registerMobileTokenDto = registerMobileTokenDto;

        if (_registerMobileTokenDto == null) {
            throw new runtime.RequiredError(
                'registerMobileTokenDto',
                'Required parameter "registerMobileTokenDto" was null or undefined when calling ().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/me/mobilepush`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RegisterMobileTokenDtoToJSON(_registerMobileTokenDto),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Register a mobile push token for the current user.
     */
    async postMyToken(registerMobileTokenDto: RegisterMobileTokenDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.postMyTokenRaw(registerMobileTokenDto, initOverrides);
    }

}
