/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateSystemUserDto,
  ListResponseDtoOfSystemUserDto,
  SystemUserDto,
  UpdateSystemUserDto,
} from '../models/index';
import {
    CreateSystemUserDtoToJSON,
    ListResponseDtoOfSystemUserDtoFromJSON,
    SystemUserDtoFromJSON,
    UpdateSystemUserDtoToJSON,
} from '../models/index';

export interface SystemUsersDeleteUserRequestRaw {
    id: string;
}

export interface SystemUsersGetUserRequestRaw {
    id: string;
}

export interface SystemUsersGetUsersRequest {
    query?: string | null;
    take?: number;
    skip?: number;
}

export interface SystemUsersGetUsersRequestRaw {
    query?: string | null;
    take?: number;
    skip?: number;
}

export interface SystemUsersLockUserRequestRaw {
    id: string;
}

export interface SystemUsersPostUserRequestRaw {
    createSystemUserDto: CreateSystemUserDto;
}

export interface SystemUsersPutUserRequestRaw {
    id: string;
    updateSystemUserDto: UpdateSystemUserDto;
}

export interface SystemUsersUnlockUserRequestRaw {
    id: string;
}

/**
 * SystemUsersApi - interface
 * 
 * @export
 * @interface SystemUsersApiInterface
 */
export interface SystemUsersApiInterface {
    /**
     * 
     * @summary Delete the user.
     * @param {string} id The user ID.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SystemUsersApiInterface
     */
    deleteUserRaw(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * Delete the user.
     */
    deleteUser(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary Get a user.
     * @param {string} id The user ID.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SystemUsersApiInterface
     */
    getUserRaw(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SystemUserDto>>;

    /**
     * Get a user.
     */
    getUser(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SystemUserDto>;

    /**
     * 
     * @summary Query users.
     * @param {string} [query] The optional query to search for items.
     * @param {number} [take] The number of items to return.
     * @param {number} [skip] The number of items to skip.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SystemUsersApiInterface
     */
    getUsersRaw(requestParameters?: SystemUsersGetUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListResponseDtoOfSystemUserDto>>;

    /**
     * Query users.
     */
    getUsers(requestParameters?: SystemUsersGetUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListResponseDtoOfSystemUserDto>;

    /**
     * 
     * @summary Lock the user.
     * @param {string} id The user ID.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SystemUsersApiInterface
     */
    lockUserRaw(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SystemUserDto>>;

    /**
     * Lock the user.
     */
    lockUser(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SystemUserDto>;

    /**
     * 
     * @summary Create a user.
     * @param {CreateSystemUserDto} createSystemUserDto The create request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SystemUsersApiInterface
     */
    postUserRaw(createSystemUserDto: CreateSystemUserDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SystemUserDto>>;

    /**
     * Create a user.
     */
    postUser(createSystemUserDto: CreateSystemUserDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SystemUserDto>;

    /**
     * 
     * @summary Update the user.
     * @param {string} id The user ID.
     * @param {UpdateSystemUserDto} updateSystemUserDto The update request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SystemUsersApiInterface
     */
    putUserRaw(id: string, updateSystemUserDto: UpdateSystemUserDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SystemUserDto>>;

    /**
     * Update the user.
     */
    putUser(id: string, updateSystemUserDto: UpdateSystemUserDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SystemUserDto>;

    /**
     * 
     * @summary Unlock the user.
     * @param {string} id The user ID.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SystemUsersApiInterface
     */
    unlockUserRaw(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SystemUserDto>>;

    /**
     * Unlock the user.
     */
    unlockUser(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SystemUserDto>;

}

/**
 * 
 */
export class SystemUsersApi extends runtime.BaseAPI implements SystemUsersApiInterface {

    /**
     * Delete the user.
     */
    async deleteUserRaw(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const _id = id;

        if (_id == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling ().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/system-users/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(_id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete the user.
     */
    async deleteUser(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteUserRaw(id, initOverrides);
    }

    /**
     * Get a user.
     */
    async getUserRaw(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SystemUserDto>> {
        const _id = id;

        if (_id == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling ().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/system-users/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(_id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SystemUserDtoFromJSON(jsonValue));
    }

    /**
     * Get a user.
     */
    async getUser(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SystemUserDto> {
        const response = await this.getUserRaw(id, initOverrides);
        return await response.value();
    }

    /**
     * Query users.
     */
    async getUsersRaw(requestParameters: SystemUsersGetUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListResponseDtoOfSystemUserDto>> {
        const _query = requestParameters?.['query'];
        const _take = requestParameters?.['take'];
        const _skip = requestParameters?.['skip'];

        const queryParameters: any = {};

        if (_query != null) {
            queryParameters['query'] = _query;
        }

        if (_take != null) {
            queryParameters['take'] = _take;
        }

        if (_skip != null) {
            queryParameters['skip'] = _skip;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/system-users`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListResponseDtoOfSystemUserDtoFromJSON(jsonValue));
    }

    /**
     * Query users.
     */
    async getUsers(requestParameters: SystemUsersGetUsersRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListResponseDtoOfSystemUserDto> {
        const response = await this.getUsersRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Lock the user.
     */
    async lockUserRaw(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SystemUserDto>> {
        const _id = id;

        if (_id == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling ().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/system-users/{id}/lock`.replace(`{${"id"}}`, encodeURIComponent(String(_id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SystemUserDtoFromJSON(jsonValue));
    }

    /**
     * Lock the user.
     */
    async lockUser(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SystemUserDto> {
        const response = await this.lockUserRaw(id, initOverrides);
        return await response.value();
    }

    /**
     * Create a user.
     */
    async postUserRaw(createSystemUserDto: CreateSystemUserDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SystemUserDto>> {
        const _createSystemUserDto = createSystemUserDto;

        if (_createSystemUserDto == null) {
            throw new runtime.RequiredError(
                'createSystemUserDto',
                'Required parameter "createSystemUserDto" was null or undefined when calling ().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/system-users`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateSystemUserDtoToJSON(_createSystemUserDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SystemUserDtoFromJSON(jsonValue));
    }

    /**
     * Create a user.
     */
    async postUser(createSystemUserDto: CreateSystemUserDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SystemUserDto> {
        const response = await this.postUserRaw(createSystemUserDto, initOverrides);
        return await response.value();
    }

    /**
     * Update the user.
     */
    async putUserRaw(id: string, updateSystemUserDto: UpdateSystemUserDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SystemUserDto>> {
        const _id = id;
        const _updateSystemUserDto = updateSystemUserDto;

        if (_id == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling ().'
            );
        }

        if (_updateSystemUserDto == null) {
            throw new runtime.RequiredError(
                'updateSystemUserDto',
                'Required parameter "updateSystemUserDto" was null or undefined when calling ().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/system-users/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(_id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateSystemUserDtoToJSON(_updateSystemUserDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SystemUserDtoFromJSON(jsonValue));
    }

    /**
     * Update the user.
     */
    async putUser(id: string, updateSystemUserDto: UpdateSystemUserDto, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SystemUserDto> {
        const response = await this.putUserRaw(id, updateSystemUserDto, initOverrides);
        return await response.value();
    }

    /**
     * Unlock the user.
     */
    async unlockUserRaw(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SystemUserDto>> {
        const _id = id;

        if (_id == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling ().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/system-users/{id}/unlock`.replace(`{${"id"}}`, encodeURIComponent(String(_id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SystemUserDtoFromJSON(jsonValue));
    }

    /**
     * Unlock the user.
     */
    async unlockUser(id: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SystemUserDto> {
        const response = await this.unlockUserRaw(id, initOverrides);
        return await response.value();
    }

}
