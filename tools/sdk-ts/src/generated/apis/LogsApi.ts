/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ListResponseDtoOfLogEntryDto,
} from '../models/index';
import {
    ListResponseDtoOfLogEntryDtoFromJSON,
} from '../models/index';

export interface LogsGetLogsRequest {
    systems?: Array<string> | null;
    userId?: string | null;
    eventCode?: number;
    query?: string | null;
    take?: number;
    skip?: number;
}

export interface LogsGetLogsRequestRaw {
    appId: string;
    systems?: Array<string> | null;
    userId?: string | null;
    eventCode?: number;
    query?: string | null;
    take?: number;
    skip?: number;
}

/**
 * LogsApi - interface
 * 
 * @export
 * @interface LogsApiInterface
 */
export interface LogsApiInterface {
    /**
     * 
     * @summary Query log entries.
     * @param {string} appId The app where the log entries belongs to.
     * @param {Array<string>} [systems] The systems.
     * @param {string} [userId] The user id.
     * @param {number} [eventCode] The event code.
     * @param {string} [query] The optional query to search for items.
     * @param {number} [take] The number of items to return.
     * @param {number} [skip] The number of items to skip.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogsApiInterface
     */
    getLogsRaw(appId: string, requestParameters?: LogsGetLogsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListResponseDtoOfLogEntryDto>>;

    /**
     * Query log entries.
     */
    getLogs(appId: string, requestParameters?: LogsGetLogsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListResponseDtoOfLogEntryDto>;

}

/**
 * 
 */
export class LogsApi extends runtime.BaseAPI implements LogsApiInterface {

    /**
     * Query log entries.
     */
    async getLogsRaw(appId: string, requestParameters: LogsGetLogsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListResponseDtoOfLogEntryDto>> {
        const _appId = appId;
        const _systems = requestParameters?.['systems'];
        const _userId = requestParameters?.['userId'];
        const _eventCode = requestParameters?.['eventCode'];
        const _query = requestParameters?.['query'];
        const _take = requestParameters?.['take'];
        const _skip = requestParameters?.['skip'];

        if (_appId == null) {
            throw new runtime.RequiredError(
                'appId',
                'Required parameter "appId" was null or undefined when calling ().'
            );
        }

        const queryParameters: any = {};

        if (_systems != null) {
            queryParameters['Systems'] = _systems;
        }

        if (_userId != null) {
            queryParameters['UserId'] = _userId;
        }

        if (_eventCode != null) {
            queryParameters['EventCode'] = _eventCode;
        }

        if (_query != null) {
            queryParameters['query'] = _query;
        }

        if (_take != null) {
            queryParameters['take'] = _take;
        }

        if (_skip != null) {
            queryParameters['skip'] = _skip;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/apps/{appId}/logs`.replace(`{${"appId"}}`, encodeURIComponent(String(_appId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListResponseDtoOfLogEntryDtoFromJSON(jsonValue));
    }

    /**
     * Query log entries.
     */
    async getLogs(appId: string, requestParameters: LogsGetLogsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListResponseDtoOfLogEntryDto> {
        const response = await this.getLogsRaw(appId, requestParameters, initOverrides);
        return await response.value();
    }

}
