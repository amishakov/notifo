/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { IntegrationPropertyDto } from './IntegrationPropertyDto';
import {
    IntegrationPropertyDtoFromJSON,
    IntegrationPropertyDtoToJSON,
} from './IntegrationPropertyDto';

/**
 * 
 * @export
 * @interface IntegrationDefinitionDto
 */
export interface IntegrationDefinitionDto {
    /**
     * The title of the integration.
     * @type {string}
     * @memberof IntegrationDefinitionDto
     */
    title: string;
    /**
     * The logo for the integration.
     * @type {string}
     * @memberof IntegrationDefinitionDto
     */
    logo: string;
    /**
     * The optional description of the integration.
     * @type {string}
     * @memberof IntegrationDefinitionDto
     */
    description?: string | null;
    /**
     * The properties to configure.
     * @type {Array<IntegrationPropertyDto>}
     * @memberof IntegrationDefinitionDto
     */
    properties: Array<IntegrationPropertyDto>;
    /**
     * The features of the integration.
     * @type {Array<string>}
     * @memberof IntegrationDefinitionDto
     */
    capabilities: Array<string>;
}

/**
 * Check if a given object implements the IntegrationDefinitionDto interface.
 */
export function instanceOfIntegrationDefinitionDto(value: any): value is IntegrationDefinitionDto {
    if (!value) {
        return false;
    }
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('logo' in value) || value['logo'] === undefined) return false;
    if (!('properties' in value) || value['properties'] === undefined) return false;
    if (!('capabilities' in value) || value['capabilities'] === undefined) return false;
    return true;
}

export function IntegrationDefinitionDtoFromJSON(json: any): IntegrationDefinitionDto {
    return IntegrationDefinitionDtoFromJSONTyped(json, false);
}

export function IntegrationDefinitionDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): IntegrationDefinitionDto {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'logo': json['logo'],
        'description': json['description'] == null ? undefined : json['description'],
        'properties': ((json['properties'] as Array<any>).map(IntegrationPropertyDtoFromJSON)),
        'capabilities': json['capabilities'],
    };
}

export function IntegrationDefinitionDtoToJSON(value?: IntegrationDefinitionDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'title': value['title'],
        'logo': value['logo'],
        'description': value['description'],
        'properties': ((value['properties'] as Array<any>).map(x => IntegrationPropertyDtoToJSON(x))),
        'capabilities': value['capabilities'],
    };
}