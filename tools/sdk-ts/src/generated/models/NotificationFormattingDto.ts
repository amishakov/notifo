/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ConfirmMode } from './ConfirmMode';
import {
    ConfirmModeFromJSON,
    ConfirmModeToJSON,
} from './ConfirmMode';

/**
 * 
 * @export
 * @interface NotificationFormattingDto
 */
export interface NotificationFormattingDto {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof NotificationFormattingDto
     */
    subject: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof NotificationFormattingDto
     */
    body?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof NotificationFormattingDto
     */
    confirmLink?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof NotificationFormattingDto
     */
    confirmText?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof NotificationFormattingDto
     */
    imageSmall?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof NotificationFormattingDto
     */
    imageLarge?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof NotificationFormattingDto
     */
    linkUrl?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof NotificationFormattingDto
     */
    linkText?: { [key: string]: string; };
    /**
     * 
     * @type {ConfirmMode}
     * @memberof NotificationFormattingDto
     */
    confirmMode?: ConfirmMode;
}



/**
 * Check if a given object implements the NotificationFormattingDto interface.
 */
export function instanceOfNotificationFormattingDto(value: any): value is NotificationFormattingDto {
    if (!value) {
        return false;
    }
    if (!('subject' in value) || value['subject'] === undefined) return false;
    return true;
}

export function NotificationFormattingDtoFromJSON(json: any): NotificationFormattingDto {
    return NotificationFormattingDtoFromJSONTyped(json, false);
}

export function NotificationFormattingDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): NotificationFormattingDto {
    if (json == null) {
        return json;
    }
    return {
        
        'subject': json['subject'],
        'body': json['body'] == null ? undefined : json['body'],
        'confirmLink': json['confirmLink'] == null ? undefined : json['confirmLink'],
        'confirmText': json['confirmText'] == null ? undefined : json['confirmText'],
        'imageSmall': json['imageSmall'] == null ? undefined : json['imageSmall'],
        'imageLarge': json['imageLarge'] == null ? undefined : json['imageLarge'],
        'linkUrl': json['linkUrl'] == null ? undefined : json['linkUrl'],
        'linkText': json['linkText'] == null ? undefined : json['linkText'],
        'confirmMode': json['confirmMode'] == null ? undefined : ConfirmModeFromJSON(json['confirmMode']),
    };
}

export function NotificationFormattingDtoToJSON(value?: NotificationFormattingDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'subject': value['subject'],
        'body': value['body'],
        'confirmLink': value['confirmLink'],
        'confirmText': value['confirmText'],
        'imageSmall': value['imageSmall'],
        'imageLarge': value['imageLarge'],
        'linkUrl': value['linkUrl'],
        'linkText': value['linkText'],
        'confirmMode': ConfirmModeToJSON(value['confirmMode']),
    };
}