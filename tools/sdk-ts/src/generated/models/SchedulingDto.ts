/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { IsoDayOfWeek } from './IsoDayOfWeek';
import {
    IsoDayOfWeekFromJSON,
    IsoDayOfWeekToJSON,
} from './IsoDayOfWeek';
import type { SchedulingType } from './SchedulingType';
import {
    SchedulingTypeFromJSON,
    SchedulingTypeToJSON,
} from './SchedulingType';

/**
 * 
 * @export
 * @interface SchedulingDto
 */
export interface SchedulingDto {
    /**
     * 
     * @type {SchedulingType}
     * @memberof SchedulingDto
     */
    type: SchedulingType;
    /**
     * 
     * @type {IsoDayOfWeek}
     * @memberof SchedulingDto
     */
    nextWeekDay?: IsoDayOfWeek;
    /**
     * The scheduling date.
     * @type {Date}
     * @memberof SchedulingDto
     */
    date?: Date | null;
    /**
     * The scheduling time.
     * @type {string}
     * @memberof SchedulingDto
     */
    time: string;
    /**
     * The delay relative to the server time.
     * @type {number}
     * @memberof SchedulingDto
     */
    delayInSeconds?: number | null;
}



/**
 * Check if a given object implements the SchedulingDto interface.
 */
export function instanceOfSchedulingDto(value: any): value is SchedulingDto {
    if (!value) {
        return false;
    }
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('time' in value) || value['time'] === undefined) return false;
    return true;
}

export function SchedulingDtoFromJSON(json: any): SchedulingDto {
    return SchedulingDtoFromJSONTyped(json, false);
}

export function SchedulingDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): SchedulingDto {
    if (json == null) {
        return json;
    }
    return {
        
        'type': SchedulingTypeFromJSON(json['type']),
        'nextWeekDay': json['nextWeekDay'] == null ? undefined : IsoDayOfWeekFromJSON(json['nextWeekDay']),
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'time': json['time'],
        'delayInSeconds': json['delayInSeconds'] == null ? undefined : json['delayInSeconds'],
    };
}

export function SchedulingDtoToJSON(value?: SchedulingDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': SchedulingTypeToJSON(value['type']),
        'nextWeekDay': IsoDayOfWeekToJSON(value['nextWeekDay']),
        'date': value['date'] == null ? undefined : ((value['date'] as any).toISOString().substring(0,10)),
        'time': value['time'],
        'delayInSeconds': value['delayInSeconds'],
    };
}