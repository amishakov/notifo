/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { MobileDeviceType } from './MobileDeviceType';
import {
    MobileDeviceTypeFromJSON,
    MobileDeviceTypeToJSON,
} from './MobileDeviceType';

/**
 * 
 * @export
 * @interface RegisterMobileTokenDto
 */
export interface RegisterMobileTokenDto {
    /**
     * The device token.
     * @type {string}
     * @memberof RegisterMobileTokenDto
     */
    token?: string;
    /**
     * 
     * @type {MobileDeviceType}
     * @memberof RegisterMobileTokenDto
     */
    deviceType?: MobileDeviceType;
    /**
     * A unique identifier for the device.
     * @type {string}
     * @memberof RegisterMobileTokenDto
     */
    deviceIdentifier?: string | null;
}



/**
 * Check if a given object implements the RegisterMobileTokenDto interface.
 */
export function instanceOfRegisterMobileTokenDto(value: any): value is RegisterMobileTokenDto {
    if (!value) {
        return false;
    }
    return true;
}

export function RegisterMobileTokenDtoFromJSON(json: any): RegisterMobileTokenDto {
    return RegisterMobileTokenDtoFromJSONTyped(json, false);
}

export function RegisterMobileTokenDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): RegisterMobileTokenDto {
    if (json == null) {
        return json;
    }
    return {
        
        'token': json['token'] == null ? undefined : json['token'],
        'deviceType': json['deviceType'] == null ? undefined : MobileDeviceTypeFromJSON(json['deviceType']),
        'deviceIdentifier': json['deviceIdentifier'] == null ? undefined : json['deviceIdentifier'],
    };
}

export function RegisterMobileTokenDtoToJSON(value?: RegisterMobileTokenDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'token': value['token'],
        'deviceType': MobileDeviceTypeToJSON(value['deviceType']),
        'deviceIdentifier': value['deviceIdentifier'],
    };
}