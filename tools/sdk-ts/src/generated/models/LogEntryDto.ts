/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface LogEntryDto
 */
export interface LogEntryDto {
    /**
     * The log message.
     * @type {string}
     * @memberof LogEntryDto
     */
    message: string;
    /**
     * The system.
     * @type {string}
     * @memberof LogEntryDto
     */
    system: string;
    /**
     * The first time this message has been seen.
     * @type {Date}
     * @memberof LogEntryDto
     */
    firstSeen: Date;
    /**
     * The last time this message has been seen.
     * @type {Date}
     * @memberof LogEntryDto
     */
    lastSeen: Date;
    /**
     * The event code.
     * @type {number}
     * @memberof LogEntryDto
     */
    eventCode: number;
    /**
     * The number of items the message has been seen.
     * @type {number}
     * @memberof LogEntryDto
     */
    count: number;
}

/**
 * Check if a given object implements the LogEntryDto interface.
 */
export function instanceOfLogEntryDto(value: any): value is LogEntryDto {
    if (!value) {
        return false;
    }
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('system' in value) || value['system'] === undefined) return false;
    if (!('firstSeen' in value) || value['firstSeen'] === undefined) return false;
    if (!('lastSeen' in value) || value['lastSeen'] === undefined) return false;
    if (!('eventCode' in value) || value['eventCode'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    return true;
}

export function LogEntryDtoFromJSON(json: any): LogEntryDto {
    return LogEntryDtoFromJSONTyped(json, false);
}

export function LogEntryDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): LogEntryDto {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'],
        'system': json['system'],
        'firstSeen': (new Date(json['firstSeen'])),
        'lastSeen': (new Date(json['lastSeen'])),
        'eventCode': json['eventCode'],
        'count': json['count'],
    };
}

export function LogEntryDtoToJSON(value?: LogEntryDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'message': value['message'],
        'system': value['system'],
        'firstSeen': ((value['firstSeen']).toISOString()),
        'lastSeen': ((value['lastSeen']).toISOString()),
        'eventCode': value['eventCode'],
        'count': value['count'],
    };
}