/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface UpdateIntegrationDto
 */
export interface UpdateIntegrationDto {
    /**
     * The configured properties.
     * @type {{ [key: string]: string; }}
     * @memberof UpdateIntegrationDto
     */
    properties: { [key: string]: string; };
    /**
     * True when enabled.
     * @type {boolean}
     * @memberof UpdateIntegrationDto
     */
    enabled?: boolean | null;
    /**
     * True when used for test events.
     * @type {boolean}
     * @memberof UpdateIntegrationDto
     */
    test?: boolean | null;
    /**
     * The javascript condition.
     * @type {string}
     * @memberof UpdateIntegrationDto
     */
    condition?: string | null;
    /**
     * The priority in which order the integrations must run.
     * @type {number}
     * @memberof UpdateIntegrationDto
     */
    priority?: number | null;
}

/**
 * Check if a given object implements the UpdateIntegrationDto interface.
 */
export function instanceOfUpdateIntegrationDto(value: any): value is UpdateIntegrationDto {
    if (!value) {
        return false;
    }
    if (!('properties' in value) || value['properties'] === undefined) return false;
    return true;
}

export function UpdateIntegrationDtoFromJSON(json: any): UpdateIntegrationDto {
    return UpdateIntegrationDtoFromJSONTyped(json, false);
}

export function UpdateIntegrationDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): UpdateIntegrationDto {
    if (json == null) {
        return json;
    }
    return {
        
        'properties': json['properties'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'test': json['test'] == null ? undefined : json['test'],
        'condition': json['condition'] == null ? undefined : json['condition'],
        'priority': json['priority'] == null ? undefined : json['priority'],
    };
}

export function UpdateIntegrationDtoToJSON(value?: UpdateIntegrationDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'properties': value['properties'],
        'enabled': value['enabled'],
        'test': value['test'],
        'condition': value['condition'],
        'priority': value['priority'],
    };
}