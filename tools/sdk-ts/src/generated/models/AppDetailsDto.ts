/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AppContributorDto } from './AppContributorDto';
import {
    AppContributorDtoFromJSON,
    AppContributorDtoToJSON,
} from './AppContributorDto';

/**
 * 
 * @export
 * @interface AppDetailsDto
 */
export interface AppDetailsDto {
    /**
     * The ID of the app.
     * @type {string}
     * @memberof AppDetailsDto
     */
    id: string;
    /**
     * The app name.
     * @type {string}
     * @memberof AppDetailsDto
     */
    name: string;
    /**
     * The current role.
     * @type {string}
     * @memberof AppDetailsDto
     */
    role: string;
    /**
     * The date time (ISO 8601) when the app has been created.
     * @type {Date}
     * @memberof AppDetailsDto
     */
    created: Date;
    /**
     * The date time (ISO 8601) when the app has been updated.
     * @type {Date}
     * @memberof AppDetailsDto
     */
    lastUpdate: Date;
    /**
     * The confirm URL.
     * @type {string}
     * @memberof AppDetailsDto
     */
    confirmUrl?: string | null;
    /**
     * The supported languages.
     * @type {Array<string>}
     * @memberof AppDetailsDto
     */
    languages: Array<string>;
    /**
     * The api keys.
     * @type {{ [key: string]: string; }}
     * @memberof AppDetailsDto
     */
    apiKeys: { [key: string]: string; };
    /**
     * The contributors.
     * @type {Array<AppContributorDto>}
     * @memberof AppDetailsDto
     */
    contributors: Array<AppContributorDto>;
    /**
     * The statistics counters.
     * @type {{ [key: string]: number; }}
     * @memberof AppDetailsDto
     */
    counters: { [key: string]: number; };
}

/**
 * Check if a given object implements the AppDetailsDto interface.
 */
export function instanceOfAppDetailsDto(value: any): value is AppDetailsDto {
    if (!value) {
        return false;
    }
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('lastUpdate' in value) || value['lastUpdate'] === undefined) return false;
    if (!('languages' in value) || value['languages'] === undefined) return false;
    if (!('apiKeys' in value) || value['apiKeys'] === undefined) return false;
    if (!('contributors' in value) || value['contributors'] === undefined) return false;
    if (!('counters' in value) || value['counters'] === undefined) return false;
    return true;
}

export function AppDetailsDtoFromJSON(json: any): AppDetailsDto {
    return AppDetailsDtoFromJSONTyped(json, false);
}

export function AppDetailsDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): AppDetailsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'role': json['role'],
        'created': (new Date(json['created'])),
        'lastUpdate': (new Date(json['lastUpdate'])),
        'confirmUrl': json['confirmUrl'] == null ? undefined : json['confirmUrl'],
        'languages': json['languages'],
        'apiKeys': json['apiKeys'],
        'contributors': ((json['contributors'] as Array<any>).map(AppContributorDtoFromJSON)),
        'counters': json['counters'],
    };
}

export function AppDetailsDtoToJSON(value?: AppDetailsDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'role': value['role'],
        'created': ((value['created']).toISOString()),
        'lastUpdate': ((value['lastUpdate']).toISOString()),
        'confirmUrl': value['confirmUrl'],
        'languages': value['languages'],
        'apiKeys': value['apiKeys'],
        'contributors': ((value['contributors'] as Array<any>).map(x => AppContributorDtoToJSON(x))),
        'counters': value['counters'],
    };
}