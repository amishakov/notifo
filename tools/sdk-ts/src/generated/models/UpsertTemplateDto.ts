/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationFormattingDto } from './NotificationFormattingDto';
import {
    NotificationFormattingDtoFromJSON,
    NotificationFormattingDtoToJSON,
} from './NotificationFormattingDto';
import type { ChannelSettingDto } from './ChannelSettingDto';
import {
    ChannelSettingDtoFromJSON,
    ChannelSettingDtoToJSON,
} from './ChannelSettingDto';

/**
 * 
 * @export
 * @interface UpsertTemplateDto
 */
export interface UpsertTemplateDto {
    /**
     * The code of the template.
     * @type {string}
     * @memberof UpsertTemplateDto
     */
    code: string;
    /**
     * 
     * @type {NotificationFormattingDto}
     * @memberof UpsertTemplateDto
     */
    formatting: NotificationFormattingDto;
    /**
     * Notification settings per channel.
     * @type {{ [key: string]: ChannelSettingDto; }}
     * @memberof UpsertTemplateDto
     */
    settings?: { [key: string]: ChannelSettingDto; } | null;
}

/**
 * Check if a given object implements the UpsertTemplateDto interface.
 */
export function instanceOfUpsertTemplateDto(value: any): value is UpsertTemplateDto {
    if (!value) {
        return false;
    }
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('formatting' in value) || value['formatting'] === undefined) return false;
    return true;
}

export function UpsertTemplateDtoFromJSON(json: any): UpsertTemplateDto {
    return UpsertTemplateDtoFromJSONTyped(json, false);
}

export function UpsertTemplateDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): UpsertTemplateDto {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'formatting': NotificationFormattingDtoFromJSON(json['formatting']),
        'settings': json['settings'] == null ? undefined : (mapValues(json['settings'], ChannelSettingDtoFromJSON)),
    };
}

export function UpsertTemplateDtoToJSON(value?: UpsertTemplateDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'code': value['code'],
        'formatting': NotificationFormattingDtoToJSON(value['formatting']),
        'settings': value['settings'] == null ? undefined : (mapValues(value['settings'], x => ChannelSettingDtoToJSON(x))),
    };
}