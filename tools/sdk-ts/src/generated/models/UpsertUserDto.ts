/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChannelSettingDto } from './ChannelSettingDto';
import {
    ChannelSettingDtoFromJSON,
    ChannelSettingDtoToJSON,
} from './ChannelSettingDto';
import type { SchedulingDto } from './SchedulingDto';
import {
    SchedulingDtoFromJSON,
    SchedulingDtoToJSON,
} from './SchedulingDto';

/**
 * 
 * @export
 * @interface UpsertUserDto
 */
export interface UpsertUserDto {
    /**
     * The ID of the user.
     * @type {string}
     * @memberof UpsertUserDto
     */
    id?: string | null;
    /**
     * The full name of the user.
     * @type {string}
     * @memberof UpsertUserDto
     */
    fullName?: string | null;
    /**
     * The email of the user.
     * @type {string}
     * @memberof UpsertUserDto
     */
    emailAddress?: string | null;
    /**
     * The phone number.
     * @type {string}
     * @memberof UpsertUserDto
     */
    phoneNumber?: string | null;
    /**
     * The preferred language of the user.
     * @type {string}
     * @memberof UpsertUserDto
     */
    preferredLanguage?: string | null;
    /**
     * The timezone of the user.
     * @type {string}
     * @memberof UpsertUserDto
     */
    preferredTimezone?: string | null;
    /**
     * True when only whitelisted topic are allowed.
     * @type {boolean}
     * @memberof UpsertUserDto
     */
    requiresWhitelistedTopics?: boolean | null;
    /**
     * The user properties.
     * @type {{ [key: string]: string; }}
     * @memberof UpsertUserDto
     */
    properties?: { [key: string]: string; } | null;
    /**
     * Notification settings per channel.
     * @type {{ [key: string]: ChannelSettingDto; }}
     * @memberof UpsertUserDto
     */
    settings?: { [key: string]: ChannelSettingDto; } | null;
    /**
     * 
     * @type {SchedulingDto}
     * @memberof UpsertUserDto
     */
    scheduling?: SchedulingDto;
    /**
     * Indicates whether scheduling should be overriden.
     * @type {boolean}
     * @memberof UpsertUserDto
     */
    hasScheduling?: boolean;
}

/**
 * Check if a given object implements the UpsertUserDto interface.
 */
export function instanceOfUpsertUserDto(value: any): value is UpsertUserDto {
    if (!value) {
        return false;
    }
    return true;
}

export function UpsertUserDtoFromJSON(json: any): UpsertUserDto {
    return UpsertUserDtoFromJSONTyped(json, false);
}

export function UpsertUserDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): UpsertUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
        'emailAddress': json['emailAddress'] == null ? undefined : json['emailAddress'],
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'preferredLanguage': json['preferredLanguage'] == null ? undefined : json['preferredLanguage'],
        'preferredTimezone': json['preferredTimezone'] == null ? undefined : json['preferredTimezone'],
        'requiresWhitelistedTopics': json['requiresWhitelistedTopics'] == null ? undefined : json['requiresWhitelistedTopics'],
        'properties': json['properties'] == null ? undefined : json['properties'],
        'settings': json['settings'] == null ? undefined : (mapValues(json['settings'], ChannelSettingDtoFromJSON)),
        'scheduling': json['scheduling'] == null ? undefined : SchedulingDtoFromJSON(json['scheduling']),
        'hasScheduling': json['hasScheduling'] == null ? undefined : json['hasScheduling'],
    };
}

export function UpsertUserDtoToJSON(value?: UpsertUserDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'fullName': value['fullName'],
        'emailAddress': value['emailAddress'],
        'phoneNumber': value['phoneNumber'],
        'preferredLanguage': value['preferredLanguage'],
        'preferredTimezone': value['preferredTimezone'],
        'requiresWhitelistedTopics': value['requiresWhitelistedTopics'],
        'properties': value['properties'],
        'settings': value['settings'] == null ? undefined : (mapValues(value['settings'], x => ChannelSettingDtoToJSON(x))),
        'scheduling': SchedulingDtoToJSON(value['scheduling']),
        'hasScheduling': value['hasScheduling'],
    };
}