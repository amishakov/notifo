/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChannelSettingDto } from './ChannelSettingDto';
import {
    ChannelSettingDtoFromJSON,
    ChannelSettingDtoToJSON,
} from './ChannelSettingDto';
import type { SchedulingDto } from './SchedulingDto';
import {
    SchedulingDtoFromJSON,
    SchedulingDtoToJSON,
} from './SchedulingDto';

/**
 * 
 * @export
 * @interface SubscribeDto
 */
export interface SubscribeDto {
    /**
     * The topic to add.
     * @type {string}
     * @memberof SubscribeDto
     */
    topicPrefix: string;
    /**
     * Notification settings per channel.
     * @type {{ [key: string]: ChannelSettingDto; }}
     * @memberof SubscribeDto
     */
    topicSettings?: { [key: string]: ChannelSettingDto; } | null;
    /**
     * 
     * @type {SchedulingDto}
     * @memberof SubscribeDto
     */
    scheduling?: SchedulingDto;
    /**
     * Indicates whether scheduling should be overriden.
     * @type {boolean}
     * @memberof SubscribeDto
     */
    hasScheduling?: boolean;
}

/**
 * Check if a given object implements the SubscribeDto interface.
 */
export function instanceOfSubscribeDto(value: any): value is SubscribeDto {
    if (!value) {
        return false;
    }
    if (!('topicPrefix' in value) || value['topicPrefix'] === undefined) return false;
    return true;
}

export function SubscribeDtoFromJSON(json: any): SubscribeDto {
    return SubscribeDtoFromJSONTyped(json, false);
}

export function SubscribeDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): SubscribeDto {
    if (json == null) {
        return json;
    }
    return {
        
        'topicPrefix': json['topicPrefix'],
        'topicSettings': json['topicSettings'] == null ? undefined : (mapValues(json['topicSettings'], ChannelSettingDtoFromJSON)),
        'scheduling': json['scheduling'] == null ? undefined : SchedulingDtoFromJSON(json['scheduling']),
        'hasScheduling': json['hasScheduling'] == null ? undefined : json['hasScheduling'],
    };
}

export function SubscribeDtoToJSON(value?: SubscribeDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'topicPrefix': value['topicPrefix'],
        'topicSettings': value['topicSettings'] == null ? undefined : (mapValues(value['topicSettings'], x => ChannelSettingDtoToJSON(x))),
        'scheduling': SchedulingDtoToJSON(value['scheduling']),
        'hasScheduling': value['hasScheduling'],
    };
}