/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConfiguredIntegrationDto } from './ConfiguredIntegrationDto';
import {
    ConfiguredIntegrationDtoFromJSON,
    ConfiguredIntegrationDtoToJSON,
} from './ConfiguredIntegrationDto';
import type { IntegrationDefinitionDto } from './IntegrationDefinitionDto';
import {
    IntegrationDefinitionDtoFromJSON,
    IntegrationDefinitionDtoToJSON,
} from './IntegrationDefinitionDto';

/**
 * 
 * @export
 * @interface ConfiguredIntegrationsDto
 */
export interface ConfiguredIntegrationsDto {
    /**
     * The configured integrations.
     * @type {{ [key: string]: ConfiguredIntegrationDto; }}
     * @memberof ConfiguredIntegrationsDto
     */
    configured: { [key: string]: ConfiguredIntegrationDto; };
    /**
     * The supported integrations.
     * @type {{ [key: string]: IntegrationDefinitionDto; }}
     * @memberof ConfiguredIntegrationsDto
     */
    supported: { [key: string]: IntegrationDefinitionDto; };
}

/**
 * Check if a given object implements the ConfiguredIntegrationsDto interface.
 */
export function instanceOfConfiguredIntegrationsDto(value: any): value is ConfiguredIntegrationsDto {
    if (!value) {
        return false;
    }
    if (!('configured' in value) || value['configured'] === undefined) return false;
    if (!('supported' in value) || value['supported'] === undefined) return false;
    return true;
}

export function ConfiguredIntegrationsDtoFromJSON(json: any): ConfiguredIntegrationsDto {
    return ConfiguredIntegrationsDtoFromJSONTyped(json, false);
}

export function ConfiguredIntegrationsDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): ConfiguredIntegrationsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'configured': (mapValues(json['configured'], ConfiguredIntegrationDtoFromJSON)),
        'supported': (mapValues(json['supported'], IntegrationDefinitionDtoFromJSON)),
    };
}

export function ConfiguredIntegrationsDtoToJSON(value?: ConfiguredIntegrationsDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'configured': (mapValues(value['configured'], x => ConfiguredIntegrationDtoToJSON(x))),
        'supported': (mapValues(value['supported'], x => IntegrationDefinitionDtoToJSON(x))),
    };
}