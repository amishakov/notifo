/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TopicChannel } from './TopicChannel';
import {
    TopicChannelFromJSON,
    TopicChannelToJSON,
} from './TopicChannel';

/**
 * 
 * @export
 * @interface UserTopicDto
 */
export interface UserTopicDto {
    /**
     * The path.
     * @type {string}
     * @memberof UserTopicDto
     */
    path: string;
    /**
     * The name.
     * @type {string}
     * @memberof UserTopicDto
     */
    name: string;
    /**
     * The optional description.
     * @type {string}
     * @memberof UserTopicDto
     */
    description?: string | null;
    /**
     * True to show the topic automatically to new users, e.g. when he accepts push notifications.
     * @type {boolean}
     * @memberof UserTopicDto
     */
    showAutomatically: boolean;
    /**
     * The channel options.
     * @type {{ [key: string]: TopicChannel; }}
     * @memberof UserTopicDto
     */
    channels: { [key: string]: TopicChannel; };
}

/**
 * Check if a given object implements the UserTopicDto interface.
 */
export function instanceOfUserTopicDto(value: any): value is UserTopicDto {
    if (!value) {
        return false;
    }
    if (!('path' in value) || value['path'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('showAutomatically' in value) || value['showAutomatically'] === undefined) return false;
    if (!('channels' in value) || value['channels'] === undefined) return false;
    return true;
}

export function UserTopicDtoFromJSON(json: any): UserTopicDto {
    return UserTopicDtoFromJSONTyped(json, false);
}

export function UserTopicDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): UserTopicDto {
    if (json == null) {
        return json;
    }
    return {
        
        'path': json['path'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'showAutomatically': json['showAutomatically'],
        'channels': (mapValues(json['channels'], TopicChannelFromJSON)),
    };
}

export function UserTopicDtoToJSON(value?: UserTopicDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'path': value['path'],
        'name': value['name'],
        'description': value['description'],
        'showAutomatically': value['showAutomatically'],
        'channels': (mapValues(value['channels'], x => TopicChannelToJSON(x))),
    };
}