/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationFormattingDto } from './NotificationFormattingDto';
import {
    NotificationFormattingDtoFromJSON,
    NotificationFormattingDtoToJSON,
} from './NotificationFormattingDto';
import type { ChannelSettingDto } from './ChannelSettingDto';
import {
    ChannelSettingDtoFromJSON,
    ChannelSettingDtoToJSON,
} from './ChannelSettingDto';
import type { SchedulingDto } from './SchedulingDto';
import {
    SchedulingDtoFromJSON,
    SchedulingDtoToJSON,
} from './SchedulingDto';

/**
 * 
 * @export
 * @interface PublishDto
 */
export interface PublishDto {
    /**
     * The topic path.
     * @type {string}
     * @memberof PublishDto
     */
    topic: string;
    /**
     * A custom ID.
     * @type {string}
     * @memberof PublishDto
     */
    id?: string | null;
    /**
     * A custom id to identity the creator.
     * @type {string}
     * @memberof PublishDto
     */
    creatorId?: string | null;
    /**
     * The template code.
     * @type {string}
     * @memberof PublishDto
     */
    templateCode?: string | null;
    /**
     * The correlation ID, that can be used to query notifications.
     * @type {string}
     * @memberof PublishDto
     */
    correlationId?: string | null;
    /**
     * The grouping key to combine notifications.
     * @type {string}
     * @memberof PublishDto
     */
    groupKey?: string | null;
    /**
     * The template variants with propability.
     * @type {{ [key: string]: number; }}
     * @memberof PublishDto
     */
    templateVariants?: { [key: string]: number; } | null;
    /**
     * Additional user defined data.
     * @type {string}
     * @memberof PublishDto
     */
    data?: string | null;
    /**
     * A custom timestamp.
     * @type {Date}
     * @memberof PublishDto
     */
    timestamp?: Date;
    /**
     * 
     * @type {NotificationFormattingDto}
     * @memberof PublishDto
     */
    preformatted?: NotificationFormattingDto;
    /**
     * The notification settings.
     * @type {{ [key: string]: ChannelSettingDto; }}
     * @memberof PublishDto
     */
    settings?: { [key: string]: ChannelSettingDto; } | null;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PublishDto
     */
    properties?: { [key: string]: string; };
    /**
     * 
     * @type {SchedulingDto}
     * @memberof PublishDto
     */
    scheduling?: SchedulingDto;
    /**
     * True when silent.
     * @type {boolean}
     * @memberof PublishDto
     */
    silent?: boolean;
    /**
     * True when using test integrations.
     * @type {boolean}
     * @memberof PublishDto
     */
    test?: boolean;
    /**
     * The time to live in seconds.
     * @type {number}
     * @memberof PublishDto
     */
    timeToLiveInSeconds?: number | null;
}

/**
 * Check if a given object implements the PublishDto interface.
 */
export function instanceOfPublishDto(value: any): value is PublishDto {
    if (!value) {
        return false;
    }
    if (!('topic' in value) || value['topic'] === undefined) return false;
    return true;
}

export function PublishDtoFromJSON(json: any): PublishDto {
    return PublishDtoFromJSONTyped(json, false);
}

export function PublishDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): PublishDto {
    if (json == null) {
        return json;
    }
    return {
        
        'topic': json['topic'],
        'id': json['id'] == null ? undefined : json['id'],
        'creatorId': json['creatorId'] == null ? undefined : json['creatorId'],
        'templateCode': json['templateCode'] == null ? undefined : json['templateCode'],
        'correlationId': json['correlationId'] == null ? undefined : json['correlationId'],
        'groupKey': json['groupKey'] == null ? undefined : json['groupKey'],
        'templateVariants': json['templateVariants'] == null ? undefined : json['templateVariants'],
        'data': json['data'] == null ? undefined : json['data'],
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
        'preformatted': json['preformatted'] == null ? undefined : NotificationFormattingDtoFromJSON(json['preformatted']),
        'settings': json['settings'] == null ? undefined : (mapValues(json['settings'], ChannelSettingDtoFromJSON)),
        'properties': json['properties'] == null ? undefined : json['properties'],
        'scheduling': json['scheduling'] == null ? undefined : SchedulingDtoFromJSON(json['scheduling']),
        'silent': json['silent'] == null ? undefined : json['silent'],
        'test': json['test'] == null ? undefined : json['test'],
        'timeToLiveInSeconds': json['timeToLiveInSeconds'] == null ? undefined : json['timeToLiveInSeconds'],
    };
}

export function PublishDtoToJSON(value?: PublishDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'topic': value['topic'],
        'id': value['id'],
        'creatorId': value['creatorId'],
        'templateCode': value['templateCode'],
        'correlationId': value['correlationId'],
        'groupKey': value['groupKey'],
        'templateVariants': value['templateVariants'],
        'data': value['data'],
        'timestamp': value['timestamp'] == null ? undefined : ((value['timestamp']).toISOString()),
        'preformatted': NotificationFormattingDtoToJSON(value['preformatted']),
        'settings': value['settings'] == null ? undefined : (mapValues(value['settings'], x => ChannelSettingDtoToJSON(x))),
        'properties': value['properties'],
        'scheduling': SchedulingDtoToJSON(value['scheduling']),
        'silent': value['silent'],
        'test': value['test'],
        'timeToLiveInSeconds': value['timeToLiveInSeconds'],
    };
}