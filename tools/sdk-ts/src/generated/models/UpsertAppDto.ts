/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface UpsertAppDto
 */
export interface UpsertAppDto {
    /**
     * The app name.
     * @type {string}
     * @memberof UpsertAppDto
     */
    name?: string | null;
    /**
     * The supported languages.
     * @type {Array<string>}
     * @memberof UpsertAppDto
     */
    languages?: Array<string> | null;
    /**
     * The sender email address.
     * @type {string}
     * @memberof UpsertAppDto
     */
    emailAddress?: string | null;
    /**
     * The sender email name.
     * @type {string}
     * @memberof UpsertAppDto
     */
    emailName?: string | null;
    /**
     * The firebase project ID.
     * @type {string}
     * @memberof UpsertAppDto
     */
    firebaseProject?: string | null;
    /**
     * The firebase credentials.
     * @type {string}
     * @memberof UpsertAppDto
     */
    firebaseCredential?: string | null;
    /**
     * The webhook URL.
     * @type {string}
     * @memberof UpsertAppDto
     */
    webhookUrl?: string | null;
    /**
     * The confirm URL.
     * @type {string}
     * @memberof UpsertAppDto
     */
    confirmUrl?: string | null;
    /**
     * True, when emails are allowed.
     * @type {boolean}
     * @memberof UpsertAppDto
     */
    allowEmail?: boolean | null;
    /**
     * True, when SMS are allowed.
     * @type {boolean}
     * @memberof UpsertAppDto
     */
    allowSms?: boolean | null;
}

/**
 * Check if a given object implements the UpsertAppDto interface.
 */
export function instanceOfUpsertAppDto(value: any): value is UpsertAppDto {
    if (!value) {
        return false;
    }
    return true;
}

export function UpsertAppDtoFromJSON(json: any): UpsertAppDto {
    return UpsertAppDtoFromJSONTyped(json, false);
}

export function UpsertAppDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): UpsertAppDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'languages': json['languages'] == null ? undefined : json['languages'],
        'emailAddress': json['emailAddress'] == null ? undefined : json['emailAddress'],
        'emailName': json['emailName'] == null ? undefined : json['emailName'],
        'firebaseProject': json['firebaseProject'] == null ? undefined : json['firebaseProject'],
        'firebaseCredential': json['firebaseCredential'] == null ? undefined : json['firebaseCredential'],
        'webhookUrl': json['webhookUrl'] == null ? undefined : json['webhookUrl'],
        'confirmUrl': json['confirmUrl'] == null ? undefined : json['confirmUrl'],
        'allowEmail': json['allowEmail'] == null ? undefined : json['allowEmail'],
        'allowSms': json['allowSms'] == null ? undefined : json['allowSms'],
    };
}

export function UpsertAppDtoToJSON(value?: UpsertAppDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'languages': value['languages'],
        'emailAddress': value['emailAddress'],
        'emailName': value['emailName'],
        'firebaseProject': value['firebaseProject'],
        'firebaseCredential': value['firebaseCredential'],
        'webhookUrl': value['webhookUrl'],
        'confirmUrl': value['confirmUrl'],
        'allowEmail': value['allowEmail'],
        'allowSms': value['allowSms'],
    };
}