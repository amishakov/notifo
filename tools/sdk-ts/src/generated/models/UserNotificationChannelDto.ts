/**
 * Notifo API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChannelSendInfoDto } from './ChannelSendInfoDto';
import {
    ChannelSendInfoDtoFromJSON,
    ChannelSendInfoDtoToJSON,
} from './ChannelSendInfoDto';
import type { ChannelSettingDto } from './ChannelSettingDto';
import {
    ChannelSettingDtoFromJSON,
    ChannelSettingDtoToJSON,
} from './ChannelSettingDto';

/**
 * 
 * @export
 * @interface UserNotificationChannelDto
 */
export interface UserNotificationChannelDto {
    /**
     * 
     * @type {ChannelSettingDto}
     * @memberof UserNotificationChannelDto
     */
    setting: ChannelSettingDto;
    /**
     * The status per token or configuration.
     * @type {{ [key: string]: ChannelSendInfoDto; }}
     * @memberof UserNotificationChannelDto
     */
    status: { [key: string]: ChannelSendInfoDto; };
    /**
     * The first time the notification has been marked as delivered for this channel.
     * @type {Date}
     * @memberof UserNotificationChannelDto
     */
    firstDelivered?: Date | null;
    /**
     * The first time the notification has been marked as seen for this channel.
     * @type {Date}
     * @memberof UserNotificationChannelDto
     */
    firstSeen?: Date | null;
    /**
     * The first time the notification has been marked as confirmed for this channel.
     * @type {Date}
     * @memberof UserNotificationChannelDto
     */
    firstConfirmed?: Date | null;
}

/**
 * Check if a given object implements the UserNotificationChannelDto interface.
 */
export function instanceOfUserNotificationChannelDto(value: any): value is UserNotificationChannelDto {
    if (!value) {
        return false;
    }
    if (!('setting' in value) || value['setting'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function UserNotificationChannelDtoFromJSON(json: any): UserNotificationChannelDto {
    return UserNotificationChannelDtoFromJSONTyped(json, false);
}

export function UserNotificationChannelDtoFromJSONTyped(json: any, _ignoreDiscriminator: boolean): UserNotificationChannelDto {
    if (json == null) {
        return json;
    }
    return {
        
        'setting': ChannelSettingDtoFromJSON(json['setting']),
        'status': (mapValues(json['status'], ChannelSendInfoDtoFromJSON)),
        'firstDelivered': json['firstDelivered'] == null ? undefined : (new Date(json['firstDelivered'])),
        'firstSeen': json['firstSeen'] == null ? undefined : (new Date(json['firstSeen'])),
        'firstConfirmed': json['firstConfirmed'] == null ? undefined : (new Date(json['firstConfirmed'])),
    };
}

export function UserNotificationChannelDtoToJSON(value?: UserNotificationChannelDto | null, _ignoreDiscriminator = false): any {
    if (value == null) {
        return value;
    }
    return {
        
        'setting': ChannelSettingDtoToJSON(value['setting']),
        'status': (mapValues(value['status'], x => ChannelSendInfoDtoToJSON(x))),
        'firstDelivered': value['firstDelivered'] == null ? undefined : ((value['firstDelivered'] as any).toISOString()),
        'firstSeen': value['firstSeen'] == null ? undefined : ((value['firstSeen'] as any).toISOString()),
        'firstConfirmed': value['firstConfirmed'] == null ? undefined : ((value['firstConfirmed'] as any).toISOString()),
    };
}